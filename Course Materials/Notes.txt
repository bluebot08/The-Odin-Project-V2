1.1 Command Line Basics
    That black screen or window is the command line interface (CLI).

    Before we do anything, take a look at the following text: $ whoami This is a terminal command because it begins with a $. 
    The $ is saying “Hey! Enter what follows in your terminal.” This means that we must exclude the $ when entering any command.
    In the example above, we would only enter whoami in our terminal. 
    This is a common indicator so make sure that you aren’t entering $ before a command.

1.2 HTML
    You can think of elements as containers for content. 
    The opening and closing tags tell the browser what content the element contains. 
    The browser can then use that information to determine how it should interpret and format the content.

    There are some HTML elements that do not have a closing tag. 
    These elements often look like this: <br /> or <img/>, 
    but some can also be used without the closing forward slash such as <br> or <img>. 
    These are known as self-closing tags or empty elements because they don’t wrap any content.

    Using the correct elements for content is called semantic HTML.

1.3 HTML text
    You may have noticed that in all the examples in this lesson we indent any elements that are within other elements. 
    This is known as nesting elements.
    When we nest elements within other elements, we create a parent and child relationship between them. 
    The nested elements are the children and the element they are nested within is the parent.

    Just as in human relationships, HTML parent elements can have many children. 
    Elements at the same level of nesting are considered to be siblings.

1.4 Links and Images
    Links to pages on other websites on the internet are called absolute links. 
    A typical absolute link will be made up of the following parts: protocol://domain/path. 
    An absolute link will always contain the protocol and domain of the destination.

    Absolute and relative links are a tricky concept to build a good mental model of, 
    a metaphor may help:
    Think of your domain name (town.com) as a town, 
    the directory in which your website is located (/museum) as a museum, 
    and each page on your website as a room in the museum (/museum/movie_room.html 
    and /museum/shops/coffee_shop.html). Relative links like ./shops/coffee_shop.html are directions 
    from the current room (the museum movie room /museum/movie_room.html) 
    to another room (the museum shop). Absolute links, on the other hand, 
    are full directions including the protocol (https), domain name (town.com) 
    and the path from that domain name (/museum/shops/coffee_shop.html): 
    https://town.com/museum/shops/coffee_shop.html.
